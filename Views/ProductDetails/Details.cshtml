@model Product


<div id="product-product" class="container">
        <div class="product-info-block">
            <div class="image-bg">
                <img src="@Model.ProductImage" alt="@Model.ProductName" />
            </div>
            @*@if (Request.Browser.IsMobileDevice)
            {
                <h1 class="mobile-product-title">@Model.ProductName</h1>
            }*@

            <div class="product_left">
                <div class="added-alert">@Model.ProductName added to cart</div>
                <div class="product_info">
                    <div class="options">
                        @foreach (var ParentOption in Model.ProductOptions.Where(o => o.OptionParentId == null))
                        {
                        <div class="option">
                            <label class="control-label"> @ParentOption.OptionName </label>
                            <div class="parent-box">
                                @await Component.InvokeAsync("Option", new { OptionId = ParentOption.OptionId })
                            </div>

                            @foreach (var childOption in @Model.ProductOptions.Where(o => o.OptionParentId == ParentOption.OptionId))
                            {
                                <div class="child-box" style="margin-left:15px;">
                                    @await Component.InvokeAsync("Option", new { OptionId = childOption.OptionId })
                                </div>
                            }
                        </div>
                         }
                            </div>
                            <div class="price-info">
                                <div class="price"></div>

                                <div class="coins_info"> 2.30 <a href="/CarryCoins" target="_blank"><b>Carrycoins</b></a> and discounted price for registered users* </div>
                                <div class="reg_info"><a href="#" data-toggle="modal" data-target="#loginModal"><b>Sign In</b></a> or <a href="#" data-toggle="modal" data-target="#registerModal"><b>Register</b></a> to start saving. </div>
                            </div>
                            <div class="buttons">
                                @Html.HiddenFor(x => x.ProductId)
                                <button type="button" id="button-cart" class="btn btn-primary">Add to Cart</button>
                                <button type="button" id="button-tocart" data-loading-text="Loading..." href="/checkout" class="btn btn-primary btn-lg btn-block">QUICK PURCHASE</button>
                            </div>
                        </div>
                <div class="info-product-coins">
                    * With each purchase registered users get 5% of the price added to their account as <a href="/CarryCoins" target="_blank"><b>Carrycoins</b></a> as well as increasing <a href="/CarryCoins" target="_blank"><b>discounts</b></a> for regular buyers.
                </div>
                <div class="product-tags">
                    Tags:

                </div>
            </div>


        </div>
        <!--Product Description-->
        <div class="desc-content">

            <div class="desc-block">
                <h1 class="product_title">@Model.ProductName</h1>
                <div class="tab-pane" id="tab-description">
                    @Html.Raw(HttpUtility.HtmlDecode(@Model.ProductDescription.Description))
                </div>
            </div>
            <div class="clear"> </div>

            <div class="sub-desc">
                <div class="center-block">
                    <div class="subdescription">
                        <h3>@Model.ProductDescription.SubDescriptionTitle1</h3>
                        @Html.Raw(HttpUtility.HtmlDecode(@Model.ProductDescription.SubDescription1))
                    </div>
                </div>

                <div class="right-block">
                    <div class="subdescription">
                        <h3>@Model.ProductDescription.SubDescriptionTitle3</h3>
                        @Html.Raw(HttpUtility.HtmlDecode(@Model.ProductDescription.SubDescription3))
                    </div>
                    <div class="subdescription">
                        <h3>@Model.ProductDescription.SubDescriptionTitle4</h3>
                        @Html.Raw(HttpUtility.HtmlDecode(@Model.ProductDescription.SubDescription4))
                    </div>

                </div>
                <div class="left-block">
                    <div class="subdescription">
                        <h3>@Model.ProductDescription.SubDescriptionTitle2</h3>
                        @Html.Raw(HttpUtility.HtmlDecode(@Model.ProductDescription.SubDescription2))

                    </div>
                    
                </div>
                <div class="clear"></div>
            </div>
            <div class="clear"> </div>
        </div>
        <div class="clear"> </div>
        <!--end Product Description-->
    </div>

<script>
     $("#button-cart").click(function () {
         var prodId = $('#ProductId').val();
            $.ajax({
                cache: false,
                type: "POST",
                url: "@Url.Action("AddToCart", "ProductDetails")",
                data: {
                    productId: prodId
                },
                success: function (data) {
                    $("#qty").html(data);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(thrownError)
                }
            });
         $('.added-alert').css('opacity', '1');
         setTimeout(function () {
             $('.added-alert').css('opacity', '0');
         }, 3000);
     });

//description script
	var heightDesc = $('#tab-description').height();
	if(heightDesc > 71 ){
		$('#tab-description').height(63);
		//$("#tab-description").after('...');
		$("#tab-description").after('<span class="read_more">Show More</span>');
	}else{
		$(".tab-content .desc-block").css("padding-bottom", "12px");
		$('#tab-description').addClass('longText');
	};

	var heightShortDesc = $('#tab-description').height();

	$('.read_more').on('click', function() {

		if($('#tab-description').height() > heightShortDesc ){
			$('.read_more').text('Show More');
			$('#tab-description').height(heightShortDesc);
			$('#tab-description').removeClass('longText');
		}else{
			$('#tab-description').height(heightDesc);
			$('.read_more').text('Show Less');
			$('#tab-description').addClass('longText');
		}

	});

    //$(".parent-box").on('click', function () {
    //    var checkedProp = $(this).find("input").prop('checked');
    //    if (checkedProp == true) {
    //        $(this).closest(".option").find(".child-box")
    //    }
    //});
</script>
