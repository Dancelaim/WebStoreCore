@model List<Article>
<div class="articles-blog">
    @foreach (var game in Model.Select(a => a.ProductGame.GameName).Distinct())
    {
        var bigArticle = Model.Where(a => a.ProductGame.GameName == game).OrderBy(a => a.ArticlePostTime).FirstOrDefault();
        var tags = @bigArticle.Tags.Split(',');

        <h2> @game  @Html.ActionLink("Read all", "Articles", "Blog", new { Game = game }, new { @class = "read-all" })</h2>
        <div class="bm-posts">
            <div class="post-item big-post">
                <div class="post-image">
                    <a href="@Url.Action("Article","Blog",new {articleId = bigArticle.ArticleId})">
                        <img src="@Url.Content(string.Format("~/" + bigArticle.ImagePath))" alt="@bigArticle.Title" title="@bigArticle.Title" class="img-responsive">
                    </a>
                </div>
                <div class="post-text">
                    <div class="post-heading">
                        <div class="tag">
                            @foreach (var tag in tags)
                            {
                                @Html.ActionLink(tag, "TagSearch", new { Tag = tag })
                            }
                        </div>
                        <h3 class="title"><a href="@Url.Action("Article", "Blog", new { articleId = bigArticle.ArticleId })">@bigArticle.Title </a></h3>

                    </div>
                    <div class="post-body">
                        <span class="date"> @bigArticle.ArticlePostTime.ToString("MMMM dd, yyyy")</span>
                        <span class="readtime_thumb">@bigArticle.ReadTime</span>
                        <div class="clear"></div>
                        <div class="short-description">
                            @Html.Raw(HttpUtility.HtmlDecode(@bigArticle.ShortDescription))
                        </div>
                        <div class="tag mob-tag">
                            @foreach (var tag in tags)
                            {
                                @Html.ActionLink(tag, "TagSearch", new { Tag = tag })
                            }
                        </div>
                    </div>
                </div>
                <div class="clear"></div>
            </div>


            @foreach (var atrticles in Model.Where(a => a.ProductGame.GameName == game).OrderBy(a => a.ArticlePostTime).Take(4).Skip(1))
            {
                <div class="post-item small-post">
                    <div class="post-image">
                        <a href="@Url.Action("Article", "Blog", new { articleId = atrticles.ArticleId })">
                            <img src="@Url.Content(string.Format("~/" + atrticles.ImagePath))" alt="@atrticles.Title" title="@atrticles.Title" class="img-responsive">
                        </a>
                    </div>
                    <div class="post-text">
                        <div class="post-heading">
                            <div class="tag">
                                @foreach (var tag in atrticles.Tags.Split(','))
                                {
                                    @Html.ActionLink(tag, "TagSearch", new { Tag = tag })
                                }
                            </div>
                            <h3 class="title"><a href="@Url.Action("Article", "Blog", new { articleId = atrticles.ArticleId })">@atrticles.Title </a></h3>

                        </div>
                        <div class="post-body">
                            <span class="date">@atrticles.ArticlePostTime.ToString("MMMM dd, yyyy") </span>
                            <span class="readtime_thumb">@atrticles.ReadTime</span>
                            <div class="clear"></div>
                            <div class="short-description">
                                @Html.Raw(HttpUtility.HtmlDecode(atrticles.ShortDescription))
                               
                            </div>
                            <div class="tag mob-tag">
                                @foreach (var tag in tags)
                                {
                                    @Html.ActionLink(tag, "TagSearch", new { Tag = tag })
                                }
                            </div>
                        </div>
                    </div>
                    <div class="clear"></div>
                </div>
            }
        <div class="clear"></div>
        </div>
    }
</div>