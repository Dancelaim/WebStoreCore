@{
    var selectedItem = ViewData["SelectedGame"] ?? "Select game";
}

    <!DOCTYPE html>
    <html>
    
        <head>
            @*TODO: Заменить на ScriptTagHelper и linkTagHelper*@
            <meta charset="utf-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
             
            <link rel="icon" href="~/images/icon-site.png" type="image/x-icon">
            <link href="~/lib/bootstrap/dist/css/bootstrap-grid.min.css" rel="stylesheet" />
            <link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
            <link rel="stylesheet" href="~/lib/bootstrap-select/css/bootstrap-select.min.css">
            <link href="~/css/Styles.min.css" rel="stylesheet" asp-append-version="true" />

            <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" asp-fallback-href="~/css/font-awesome.min.css" asp-fallback-test-class="fa" rel="stylesheet" />
        </head>
    
<body>
    @*@(Request.Browser.IsMobileDevice ? "cover mobile-cover" : "cover")*@
    <div class="cover">
        <header>
            <div class="top">
                <div id="content">
                    @*@if (Request.Browser.IsMobileDevice)
                        {
                            @Html.Action("GameCategoryMenu", "Navigation", new { isMobile = true })
                            <div id="logo-mobile"><a href="/"> <img src="~/images/logo.svg" alt="logo" /> </a></div>
                        }
                        else
                        {*@
                    <div id="logo"><a href="/"> <img src="~/images/logo.svg" alt="logo" /> </a></div>
                    <div class="games-top-menu-block">
                        <button class="hover-button" type="button" id="dropdownmenuTop" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">


                            <div class="no-category" style="display: inline-block;">@selectedItem</div>


                            <i class="fa"></i>
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownmenuTop">
                            @await Component.InvokeAsync("GameMenu")
                        </ul>
                    </div>
                    <div class="top_curr">
                        <div class="top_currency">
                            <div class="pull-left">
                                <form action="" method="post" enctype="multipart/form-data" id="form-currency">
                                    <div class="btn-group">
                                        <div class="hover-button">
                                            <span> Europe </span>
                                            <i class="fa"></i>
                                        </div>
                                        <ul class="dropdown-menu">
                                            <li>
                                                <button class="currency-select btn btn-link btn-block" type="button" name="EUR">Europe</button>
                                            </li>
                                            <li>
                                                <button class="currency-select btn btn-link btn-block" type="button" name="USD">US&amp;Oceania</button>
                                            </li>
                                        </ul>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                    @*}*@
                    <button id="toggleCart" type="button" class="btn-cart" data-toggle="modal" data-target="#cartModal">
                        Cart<span>(<span id="qty"></span>)</span>
                    </button>
                    <div class="modal fade" id="cartModal" tabindex="-1" role="dialog" aria-labelledby="cartModalLabel" aria-hidden="true">
                        @*@Html.Action("CartPopUp", "Cart")*@
                    </div>

                    <div class="account_block">
                        <ul class="list-inline">
                            <li>
                                @if (!User.Identity.IsAuthenticated)
                                {
                                    <span class="txt_acc">My Account</span>
                                    <ul class="dropdown-menu">
                                        <li><a href="#" data-toggle="modal" data-target="#registerModal">Register</a></li>
                                        <li><a href="#" data-toggle="modal" data-target="#loginModal">Login</a></li>
                                    </ul>
                                }
                                else
                                {
                                    <span class="txt_acc">@User.Identity.Name</span>
                                    <ul class="dropdown-menu">
                                        <li> <div class="login-user"> @Html.ActionLink("Logout", "Logout", "Account")</div></li>
                                    </ul>
                                }
                            </li>
                        </ul>
                    </div>
                    <div class="modal fade" id="loginModal" tabindex="-1" role="dialog" aria-labelledby="cartModalLabel" aria-hidden="true">
                        @Html.Partial("Login")
                    </div>
                    <div class="modal fade" id="registerModal" tabindex="-1" role="dialog" aria-labelledby="cartModalLabel" aria-hidden="true">
                        @Html.Partial("Register")
                    </div>

                    <form action="" class="search-bar">

                        <button class="btn btn-primary search-btn" type="submit">
                            Search
                        </button>
                    </form>
                    <div class="clear"></div>
                </div>
            </div>
            <div class="bottom">
                <div id="content">
                    <div class="navbar" id="navbarSupportedContent">
                        <ul class="navbar-nav mr-auto">
                            @await Component.InvokeAsync("CategoryMenu")
                            @*@if(!Request.Browser.IsMobileDevice)
                                {
                                    @Html.Action("CategoryMenu", "Navigation")
                                }*@
                        </ul>
                    </div>
                </div>
            </div>
        </header>
        <script>
            $(document).on("click", ".remove_block button", function () {
                var prodId = $(this).closest('.cart-block').find('input').val();
                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@Url.Action("RemoveFromCart", "Cart")",
                    data: {
                        productId: prodId
                    },
                    success: function (data) {
                        $("#cartModal").html(data);
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(thrownError)
                    }
                });
            });

            $("#toggleCart").click(function () {
                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@Url.Action("UpdateCart", "Cart")",
                    success: function (data) {
                        $("#cartModal").html(data);
                    }
                });
            });

            var data = new Object();
            data['TimeZone'] = Intl.DateTimeFormat().resolvedOptions().timeZone;
            data['Region'] = 'US';

            @*$.ajax({
                cache: false,
                type: "POST",
                url: "@Url.Action("SetSessionData", "HomePage")",
                data: {
                    dict: data
                }
            });*@
        </script>
</body>
    </html>
