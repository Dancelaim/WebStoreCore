@model ProductDetails
<div class="panel">
    @*@using (Html.BeginForm("SaveImage", "Admin",new { type = "Product" , game =Model.Product.ProductGame.GameName,  category = Model.Product.ProductCategory.ProductCategoryName , RequireFileName = Model.ProductName }, FormMethod.Post,
                            new { enctype = "multipart/form-data" }))*@
    @using (Html.BeginForm("SaveProduct", "Admin", new { navigateToProdOpt = false }, FormMethod.Post))
    {
        <div class="panel-heading">
            <h3> @(@Model.ProductName ?? "Create product")</h3>
            <div class="save-btns">
                <input type="submit" value="Save" class="btn" id="SubmitProduct" />
                <input type="submit" value="Save and go to Product Options" class="btn btn-save" id="goToProdOptions" />
                @Html.ActionLink("Undo and Exit", "Admin", null, new { @class = "btn btn-default"})
            </div>
            @Html.ValidationSummary()
        </div>
        //if (User.IsInRole("Root Admin") || User.IsInRole("Admin"))
        //{ 
            <div class="panel-body">
                <div class="tabs">
                    <div id="tab1" class="tab-title active-title">Product Info</div>
                    <div id="tab2" class="tab-title">Descriptions</div>
                </div>
                @Html.HiddenFor(m => m.ProductId)
                @Html.HiddenFor(m => m.ProductDescriptionId)
                @Html.HiddenFor(m => m.ProductCategoryId)
                @Html.HiddenFor(m => m.ProductGameId)
                @Html.HiddenFor(m => m.ProductSEOId)
                @Html.HiddenFor(m => m.ProductSubCategoryId)
                @Html.HiddenFor(m => m.ProductCreateDate)
                @Html.HiddenFor(m => m.ProductUpdateDate)
            <div class="tabs-desc">
                <div class="tab1 active-tab">
                    <div class="input-block">
                        <label>Product Name:</label>
                        @Html.TextBoxFor(m => m.ProductName)
                    </div>
                    <div class="input-block">
                        <label>InStock:</label>
                        @Html.CheckBoxFor(m => m.InStock)
                    </div>
                    <div class="input-block">
                        <label>PreOrder:</label>
                        @Html.CheckBoxFor(m => m.PreOrder)
                    </div>
                    <div class="input-block">
                        <label>Priority:</label>
                        @Html.CheckBoxFor(m => m.ProductPriority)
                    </div>
                    <div class="input-block">
                        <label>Product Enabled:</label>
                        @Html.CheckBoxFor(m => m.ProductEnabled)
                    </div>
                    <div class="input-block">
                        <label>Product Quantity:</label>
                        @Html.TextBoxFor(m => m.ProductQuantity)
                    </div>
                    <div class="input-block">
                        <label>Select Game:</label>
                        @Html.DropDownListFor(m => m.SelectedGame, Model.GamesList)
                        @Html.HiddenFor(m => m.SelectedGame)
                        @*@Html.DropDownList("ProductGameId", ViewBag.GamesList as SelectList, new { @class = "TestClass" })
            @Html.HiddenFor(m => m.ProductGameId)*@
                    </div>
                    <div class="input-block">
                        <label>Select Category:</label>
                        @Html.DropDownListFor(m => m.SelectedCategory, Model.CategoriesList)
                        @Html.HiddenFor(m => m.SelectedCategory)
                        @*@Html.DropDownListFor(m => m.ProductCategoryId, ViewBag.CategoriesList as SelectList)
            @Html.HiddenFor(m => m.ProductCategoryId)*@
                    </div>
                    <div class="input-block">
                        <label>Select Meta tag title from List:</label>
                        @Html.DropDownListFor(m => m.SelectedMetaTagTitle, Model.MetaTagTitleList)
                        @Html.HiddenFor(m => m.SelectedMetaTagTitle)
                        @*@Html.DropDownListFor(m => m.ProductSeoid, ViewBag.MetaTagTitleList as SelectList, htmlAttributes: new { @class = "TestClass" })
            @Html.HiddenFor(m => m.ProductSeoid)*@
                    </div>
                    @*TODO:ProductSubCategoryList*@
                    @*<div class="input-block">
            <label>Select Product Sub Category from List:</label>
            @Html.DropDownListFor(m => m.SelectedSubCategory, Model.SubCategoriesList)
            @Html.HiddenFor(m => m.SelectedSubCategory)
        </div>*@
                    <div class="imageBlock">
                        <div class="upload-box">
                            <label for="Thumbfile">Upload Image:</label>
                            <label for="Thumbfile" class="upload-btn btn">Upload</label>
                            <input type="file" name="file" id="Thumbfile" class="ImageUpload" style="display:none;" />
                        </div>
                        <div class="img-prew">
                            <label for="file">Product Image Thumb</label>
                            <div class="imgPrewIn">
                                <img class="imgThumb" src="@Model.ProductImageThumb" />
                            </div>
                            @Html.HiddenFor(m => m.ProductImageThumb, new { @readonly = "readonly" })
                        </div>
                    </div>
                    @Html.HiddenFor(m => m.ProductPriceId)
                    <div class="input-block">
                        @Html.LabelFor(m => m.EuPrice)
                        @Html.EditorFor(m => m.EuPrice)
                    </div>
                    <div class="input-block">
                        @Html.LabelFor(m => m.EuSale)
                        @Html.EditorFor(m => m.EuSale)
                    </div>
                    <div class="input-block">
                        @Html.LabelFor(m => m.UsPrice)
                        @Html.EditorFor(m => m.UsPrice)
                    </div>
                    <div class="input-block">
                        @Html.LabelFor(m => m.UsSale)
                        @Html.EditorFor(m => m.UsSale)
                    </div>
                    <div class="imageBlock">

                        <div class="upload-box">
                            <label for="Largefile">Upload Image:</label>
                            <label for="Largefile" class="upload-btn btn">Upload</label>
                            <input type="file" name="file" id="Largefile" class="ImageUpload" style="display:none;" />
                        </div>
                        <div class="img-prew">
                            <label for="file">Product Image</label>
                            <div class="imgPrewIn">
                                <img class="imgLarge" src="@Model.ProductImage" />
                            </div>
                            @Html.HiddenFor(m => m.ProductImage, new { @readonly = "readonly" })
                        </div>
                    </div>
                </div>
                <div class="tab2">
                    <div class="description-block">
                        <div class="input-block">
                            <label>Product description</label>
                            @Html.TextAreaFor(m => m.Description, 3, 3, new { @class = "textarea-desc", rows = 3 })
                        </div>
                        <div class="input-block">
                            <label>SubDescriptionTitle1</label>
                            @Html.TextAreaFor(m => m.SubDescriptionTitle1, 3, 3, new { @class = "textarea-desc", rows = 3 })
                        </div>
                        <div class="input-block">
                            <label>SubDescription1</label>
                            @Html.TextAreaFor(m => m.SubDescription1, 3, 3, new { @class = "textarea-desc", rows = 3 })
                        </div>
                        <div class="input-block">
                            <label>SubDescriptionTitle2</label>
                            @Html.TextAreaFor(m => m.SubDescriptionTitle2, 3, 3, new { @class = "textarea-desc", rows = 3 })
                        </div>
                        <div class="input-block">
                            <label>SubDescription1</label>
                            @Html.TextAreaFor(m => m.SubDescription2, 3, 3, new { @class = "textarea-desc", rows = 3 })
                        </div>
                        <div class="input-block">
                            <label>SubDescriptionTitle3</label>
                            @Html.TextAreaFor(m => m.SubDescriptionTitle3, 3, 3, new { @class = "textarea-desc", rows = 3 })
                        </div>
                        <div class="input-block">
                            <label>SubDescription1</label>
                            @Html.TextAreaFor(m => m.SubDescription3, 3, 3, new { @class = "textarea-desc", rows = 3 })
                        </div>
                        <div class="input-block">
                            <label>SubDescriptionTitle4</label>
                            @Html.TextAreaFor(m => m.SubDescriptionTitle4, 3, 3, new { @class = "textarea-desc", rows = 3 })
                        </div>
                        <div class="input-block">
                            <label>SubDescription1</label>
                            @Html.TextAreaFor(m => m.SubDescription4, 3, 3, new { @class = "textarea-desc", rows = 3 })
                        </div>
                        <div class="input-block">
                            <label>SubDescriptionTitle5</label>
                            @Html.TextAreaFor(m => m.SubDescriptionTitle5, 3, 3, new { @class = "textarea-desc", rows = 3 })
                        </div>
                        <div class="input-block">
                            <label>SubDescription1</label>
                            @Html.TextAreaFor(m => m.SubDescription5, 3, 3, new { @class = "textarea-desc", rows = 3 })
                        </div>
                        @*@if (!property.PropertyName.Contains("Title"))
        {
            @Html.TextArea(property.PropertyName, null, new { @class = "textarea-desc", rows = 3 })
        }
        else
        {
            @Html.Editor(property.PropertyName, new { @class = "form-control", rows = 5 })
        }*@
                    </div>
                </div>
            </div>  
                   
            </div>
        //}
        @*#region else if (User.IsInRole("Price Admin")) 
        else if (User.IsInRole("Price Admin"))
        {
            <div class="panel-body">
                <div class="tabs">
                    <div id="tab1" class="tab-title active-title">Product Info</div>
                    <div id="tab2" class="tab-title">Descriptions</div>
                </div>
                @Html.HiddenFor(m => m.ProductId)
                <div class="tabs-desc">
                    <div class="tab1 active-tab">
                        <div class="input-block">
                            @Html.LabelFor(m => m.ProductName)
                            @Html.TextBoxFor(m => m.ProductName, new { @readonly = "readonly" })
                        </div>
                        <div class="input-block">
                            @Html.LabelFor(m => m.InStock)
                            @Html.CheckBoxFor(m => m.InStock, new { @onclick = "return false" })
                        </div>
                        <div class="input-block">
                            @Html.LabelFor(m => m.PreOrder)
                            @Html.CheckBoxFor(m => m.PreOrder, new { @onclick = "return false" })
                        </div>
                        <div class="input-block">
                            @Html.LabelFor(m => m.ProductEnabled)
                            @Html.CheckBoxFor(m => m.ProductEnabled, new { @onclick = "return false" })
                        </div>
                        <div class="input-block">
                            @Html.LabelFor(m => m.ProductQuantity)
                            @Html.TextBoxFor(m => m.ProductQuantity, new { @readonly = "readonly" })
                        </div>
                        <div class="input-block">
                            @Html.LabelFor(m => m.ProductImageThumb)
                            @Html.TextBoxFor(m => m.ProductImageThumb, new { @readonly = "readonly" })
                        </div>
                        <div class="input-block">
                            @Html.LabelFor(m => m.ProductImage)
                            @Html.TextBoxFor(m => m.ProductImage, new { @readonly = "readonly" })
                        </div>
                        <div class="input-block">
                            @Html.LabelFor(m => m.SelectedGame)
                            @Html.TextBoxFor(m => m.SelectedGame, new { @readonly = "readonly" })
                        </div>
                        <div class="input-block">
                            @Html.LabelFor(m => m.SelectedCategory)
                            @Html.TextBoxFor(m => m.SelectedCategory, new { @readonly = "readonly" })
                        </div>
                        <div class="input-block">
                            @Html.LabelFor(m => m.SelectedMetaTagTitle)
                            @Html.TextBoxFor(m => m.SelectedMetaTagTitle, new { @readonly = "readonly" })
                        </div>
                        <div class="input-block">
                            @Html.LabelFor(m => m.EuPrice)
                            @Html.EditorFor(m => m.EuPrice)
                        </div>
                        <div class="input-block">
                            @Html.LabelFor(m => m.EuSale)
                            @Html.EditorFor(m => m.EuSale)
                        </div>
                        <div class="input-block">
                            @Html.LabelFor(m => m.UsPrice)
                            @Html.EditorFor(m => m.UsPrice)
                        </div>
                        <div class="input-block">
                            @Html.LabelFor(m => m.UsSale)
                            @Html.EditorFor(m => m.UsSale)
                        </div>
                    </div>
                    <div class="tab2">
                        <div class="description-block">
                            @Html.LabelFor(m => m.Description)
                            @Html.TextAreaFor(m => m.Description, new { @readonly = "readonly" })
                        </div>
                        <div class="description-block">
                            @Html.LabelFor(m => m.SubDescriptionTitle1)
                            @Html.TextBoxFor(m => m.SubDescriptionTitle1, new { @readonly = "readonly" })
                        </div>
                        <div class="description-block">
                            @Html.LabelFor(m => m.SubDescription1)
                            @Html.TextAreaFor(m => m.SubDescription1, new { @readonly = "readonly" })
                        </div>
                        <div class="description-block">
                            @Html.LabelFor(m => m.SubDescriptionTitle2)
                            @Html.TextBoxFor(m => m.SubDescriptionTitle2, new { @readonly = "readonly" })
                        </div>
                        <div class="description-block">
                            @Html.LabelFor(m => m.SubDescription2)
                            @Html.TextAreaFor(m => m.SubDescription2, new { @readonly = "readonly" })
                        </div>
                        <div class="description-block">
                            @Html.LabelFor(m => m.SubDescriptionTitle3)
                            @Html.TextBoxFor(m => m.SubDescriptionTitle3, new { @readonly = "readonly" })
                        </div>
                        <div class="description-block">
                            @Html.LabelFor(m => m.SubDescription3)
                            @Html.TextAreaFor(m => m.SubDescription3, new { @readonly = "readonly" })
                        </div>
                        <div class="description-block">
                            @Html.LabelFor(m => m.SubDescriptionTitle4)
                            @Html.TextBoxFor(m => m.SubDescriptionTitle4, new { @readonly = "readonly" })
                        </div>
                        <div class="description-block">
                            @Html.LabelFor(m => m.SubDescription4)
                            @Html.TextAreaFor(m => m.SubDescription4, new { @readonly = "readonly" })
                        </div>
                        <div class="description-block">
                            @Html.LabelFor(m => m.SubDescriptionTitle5)
                            @Html.TextBoxFor(m => m.SubDescriptionTitle5, new { @readonly = "readonly" })
                        </div>
                        <div class="description-block">
                            @Html.LabelFor(m => m.SubDescription5)
                            @Html.TextAreaFor(m => m.SubDescription5, new { @readonly = "readonly" })
                        </div>
                    </div>
                </div>
            </div>

        }
        #endregion*@
        <div class="panel-footer">
            <div class="save-btns">

                <input type="submit" value="Save" class="btn" id="SubmitProduct" />
                <input type="submit" value="Save and go to Product Options" class="btn btn-save" id="goToProdOptions" />
                @Html.ActionLink("Undo and Exit", "Admin", null, new
           {
               @class = "btn btn-default"
           })
            </div>
            <div class="clear"></div>
        </div>

    }
</div>
