@model TemplateOption
@using (Html.BeginForm("SaveTemplateOption", "Admin", FormMethod.Post))
{
    <div class="panel-heading">
        <div class="save-btns">

            <input type="submit" value="Save" class="btn" id="SubmitOption" />
            @Html.ActionLink("Exit", "Admin", null, new
       {
           @class = "btn btn-default exitBtn"
       })
        </div>
    </div>
    foreach (var property in ViewData.ModelMetadata.Properties)
    {
        @Html.HiddenFor(x => Model.OptionId)
        if (property.PropertyName != "TempOptionId" && property.PropertyName != "TempOptionParamsDetailsCollection")
        {

            <div class="input-block">
                <label>@(property.DisplayName ?? property.PropertyName):</label>
                @Html.Editor(property.PropertyName, new { @class = "form-control" })
            </div>
        }
    }
    <div class="add-param-block">
        <label id="AddTempParam">Add Parameter</label>
        <div class="param-add btn">Add</div>
    </div>

    <div class="childblock-list">

        @if (Model.TempOptionParams != null)
        {
            for (var i = 0; i < Model.TempOptionParams.Count(); i++)
            {
                <div class="param-fields">
                    @Html.HiddenFor(x => Model.TempOptionParams)
                    <div>
                        @Html.TextBoxFor(x => Model.TempOptionParams)
                    </div>
                    <div>
                        @Html.TextBoxFor(x => Model.TempOptionParams)
                    </div>
                    <div>
                        @Html.TextBoxFor(x => Model.TempOptionParams)
                    </div>
                    <div>
                        @Html.TextBoxFor(x => Model.TempOptionParams)
                    </div>
                    <div>
                        @Html.TextBoxFor(x => Model.TempOptionParams)
                    </div>
                    <div><span class="remove-param"></span></div>
                </div>
            }
        }
    </div>

}

